
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin:   'net.minecraftforge.gradle'
apply plugin:   'maven-publish'
apply plugin:   'eclipse'
apply plugin: 'org.spongepowered.mixin'



repositories {
    maven { // JEI
        url "https://dvs1.progwml6.com/files/maven"
    }
}


group = 'com.ducklingvivi.voxelweapons'
archivesBaseName = 'voxelweapons'


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'official', version: '1.19.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.


    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'voxelweapons'
            mods {
                voxelweapons {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'voxelweapons'
            mods {
                voxelweapons {
                    source sourceSets.main
                }
            }
        }


        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'voxelweapons'
            mods {
                voxelweapons {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'voxelweapons', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                voxelweapons {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }




// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "voxelweapons",
                "Specification-Vendor"    : "DucklingVivi",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "DucklingVivi",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}


jar.finalizedBy('reobfJar')


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

mixin {
    add sourceSets.main, "voxelweapons.refmap.json"
    config "voxelweapons.mixins.json"
    debug.verbose = true
    debug.export = true
}